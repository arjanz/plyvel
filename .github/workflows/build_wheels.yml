name: Build and Publish Wheels

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"  # cibuildwheel runs on a single Python version but builds all

      - name: Install dependencies
        run: python -m pip install --upgrade pip cibuildwheel

      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_TEST_COMMAND: "pytest {package}"
          CIBW_TEST_REQUIRES: "pytest"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-wheels
          path: wheelhouse/*

  publish_pypi:
    name: Publish to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          name: built-wheels
          path: wheelhouse

      - name: Install Twine
        run: python -m pip install --upgrade twine

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --non-interactive --disable-progress-bar wheelhouse/*
